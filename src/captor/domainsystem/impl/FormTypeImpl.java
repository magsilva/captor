//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.11.22 at 02:36:31 GMT-03:00 
//


package captor.domainsystem.impl;

public class FormTypeImpl implements captor.domainsystem.FormType, com.sun.xml.bind.JAXBObject, captor.domainsystem.impl.runtime.UnmarshallableObject, captor.domainsystem.impl.runtime.XMLSerializable, captor.domainsystem.impl.runtime.ValidatableObject
{

    protected java.lang.String _Variant;
    protected java.lang.String _Help;
    protected java.lang.String _Extends;
    protected boolean has_Enabled;
    protected boolean _Enabled;
    protected captor.domainsystem.FormComponentsType _FormComponents;
    protected boolean has_IsRoot;
    protected boolean _IsRoot;
    protected java.lang.String _Name;
    protected captor.domainsystem.NextFormsType _NextForms;
    protected java.lang.String _Id;
    protected java.lang.String _Use;
    public final static java.lang.Class version = (captor.domainsystem.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (captor.domainsystem.FormType.class);
    }

    public java.lang.String getVariant() {
        return _Variant;
    }

    public void setVariant(java.lang.String value) {
        _Variant = value;
    }

    public java.lang.String getHelp() {
        return _Help;
    }

    public void setHelp(java.lang.String value) {
        _Help = value;
    }

    public java.lang.String getExtends() {
        return _Extends;
    }

    public void setExtends(java.lang.String value) {
        _Extends = value;
    }

    public boolean isEnabled() {
        return _Enabled;
    }

    public void setEnabled(boolean value) {
        _Enabled = value;
        has_Enabled = true;
    }

    public captor.domainsystem.FormComponentsType getFormComponents() {
        return _FormComponents;
    }

    public void setFormComponents(captor.domainsystem.FormComponentsType value) {
        _FormComponents = value;
    }

    public boolean isIsRoot() {
        return _IsRoot;
    }

    public void setIsRoot(boolean value) {
        _IsRoot = value;
        has_IsRoot = true;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public captor.domainsystem.NextFormsType getNextForms() {
        return _NextForms;
    }

    public void setNextForms(captor.domainsystem.NextFormsType value) {
        _NextForms = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getUse() {
        return _Use;
    }

    public void setUse(java.lang.String value) {
        _Use = value;
    }

    public captor.domainsystem.impl.runtime.UnmarshallingEventHandler createUnmarshaller(captor.domainsystem.impl.runtime.UnmarshallingContext context) {
        return new captor.domainsystem.impl.FormTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(captor.domainsystem.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "id");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_Enabled) {
            context.startElement("", "enabled");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Enabled)), "Enabled");
            } catch (java.lang.Exception e) {
                captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "variant");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Variant), "Variant");
        } catch (java.lang.Exception e) {
            captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_Extends!= null) {
            context.startElement("", "extends");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Extends), "Extends");
            } catch (java.lang.Exception e) {
                captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NextForms!= null) {
            context.startElement("", "nextForms");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NextForms), "NextForms");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NextForms), "NextForms");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NextForms), "NextForms");
            context.endElement();
        }
        if (_Help!= null) {
            context.startElement("", "help");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Help), "Help");
            } catch (java.lang.Exception e) {
                captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FormComponents!= null) {
            context.startElement("", "formComponents");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormComponents), "FormComponents");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormComponents), "FormComponents");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormComponents), "FormComponents");
            context.endElement();
        }
    }

    public void serializeAttributes(captor.domainsystem.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_IsRoot) {
            context.startAttribute("", "isRoot");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsRoot)), "IsRoot");
            } catch (java.lang.Exception e) {
                captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Use!= null) {
            context.startAttribute("", "use");
            try {
                context.text(((java.lang.String) _Use), "Use");
            } catch (java.lang.Exception e) {
                captor.domainsystem.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(captor.domainsystem.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (captor.domainsystem.FormType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Element"
+"Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
+"declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0003ppsr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.da"
+"tatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFa"
+"cetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/data"
+"type/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datat"
+"ype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Uriq\u0000~\u0000\u001dL\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatyp"
+"e/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.d"
+"atatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001et\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000$\u0001q\u0000~\u0000(t\u0000\u0007patternur\u0000\u0013[Ljava."
+"lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000K([a-zA-Z\u00c3\u00a7\u00c3\u0087\u00c3\u00a3\u00c3\u0083\u00c3\u00a1\u00c3\u00a9\u00c3\u00ad\u00c3\u00b3\u00c3\u00ba\u00c3\u0081"
+"\u00c3\u0089\u00c3\u008d\u00c3\u0093\u00c3\u009a\u00c3\u00a2\u00c3\u00aa\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb\u00c3\u0082\u00c3\u008a\u00c3\u008e\u00c3\u0094\u00c3\u009bU\u00c3\u00bc\u00c3\u009c*\\.\\s\\-_0-9])+sr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr"
+"\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\f"
+"namespaceURIq\u0000~\u0000\u001dxpt\u0000\u000estring-derivedq\u0000~\u0000!sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Att"
+"ributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003sr\u0000\u0011ja"
+"va.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.ms"
+"v.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)t\u0000\u0005QNamesr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000#q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000=q\u0000~\u0000)sr\u0000#com.sun.msv.grammar.SimpleN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001d"
+"com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://w"
+"ww.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Exp"
+"ression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00008\u0001psq\u0000~\u0000At\u0000\u0002i"
+"dq\u0000~\u0000!sq\u0000~\u00004ppsq\u0000~\u0000\u000eq\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsr\u0000$com.sun.msv.d"
+"atatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)t\u0000\u0007booleanq\u0000~\u0000?"
+"q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000Qq\u0000~\u0000)sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~"
+"\u0000At\u0000\u0007enabledq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0017q\u0000~\u0000!pq"
+"\u0000~\u0000$\u0000\u0000q\u0000~\u0000(q\u0000~\u0000(q\u0000~\u0000+uq\u0000~\u0000,\u0000\u0000\u0000\u0001t\u0000J([a-zA-Z\u00c3\u00a7\u00c3\u0087\u00c3\u00a3\u00c3\u0083\u00c3\u00a1\u00c3\u00a9\u00c3\u00ad\u00c3\u00b3\u00c3\u00ba"
+"\u00c3\u0081\u00c3\u0089\u00c3\u008d\u00c3\u0093\u00c3\u009a\u00c3\u00a2\u00c3\u00aa\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb\u00c3\u0082\u00c3\u008a\u00c3\u008e\u00c3\u0094\u00c3\u009bU\u00c3\u00bc\u00c3\u009c\\.\\s\\-_0-9])+q\u0000~\u00000sq\u0000~\u00001t"
+"\u0000\u000estring-derivedq\u0000~\u0000!sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~"
+"\u0000At\u0000\u0004nameq\u0000~\u0000!sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0017q\u0000~\u0000!pq\u0000~\u0000$\u0000\u0000q\u0000"
+"~\u0000(q\u0000~\u0000(q\u0000~\u0000+uq\u0000~\u0000,\u0000\u0000\u0000\u0001t\u0000J([a-zA-Z\u00c3\u00a7\u00c3\u0087\u00c3\u00a3\u00c3\u0083\u00c3\u00a1\u00c3\u00a9\u00c3\u00ad\u00c3\u00b3\u00c3\u00ba\u00c3\u0081\u00c3\u0089\u00c3\u008d\u00c3\u0093"
+"\u00c3\u009a\u00c3\u00a2\u00c3\u00aa\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb\u00c3\u0082\u00c3\u008a\u00c3\u008e\u00c3\u0094\u00c3\u009bU\u00c3\u00bc\u00c3\u009c\\.\\s\\-_0-9])+q\u0000~\u00000sq\u0000~\u00001t\u0000\u000estring"
+"-derivedq\u0000~\u0000!sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~\u0000At\u0000\u0007var"
+"iantq\u0000~\u0000!sq\u0000~\u00004ppsq\u0000~\u0000\u000eq\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppq\u0000~\u0000(q\u0000~\u00000sq\u0000~"
+"\u00001q\u0000~\u0000*q\u0000~\u0000)sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~\u0000At\u0000\u0007exte"
+"ndsq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u00004ppsq\u0000~\u0000\u000eq\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u00004pps"
+"r\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.ms"
+"v.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u00009psq\u0000~\u00006q\u0000"
+"~\u00009psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Hpsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Gsq\u0000~\u0000At\u0000!captor.domainsystem.NextFormsTyp"
+"et\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u00004ppsq\u0000~\u0000"
+"6q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~\u0000At\u0000\tnextFormsq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u00004ppsq"
+"\u0000~\u0000\u000eq\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000rsq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gs"
+"q\u0000~\u0000At\u0000\u0004helpq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u00004ppsq\u0000~\u0000\u000eq\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000"
+"sq\u0000~\u00004ppsq\u0000~\u0000}q\u0000~\u00009psq\u0000~\u00006q\u0000~\u00009pq\u0000~\u0000\u0082q\u0000~\u0000\u0084q\u0000~\u0000Gsq\u0000~\u0000At\u0000&capt"
+"or.domainsystem.FormComponentsTypeq\u0000~\u0000\u0087sq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009pq"
+"\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000Gsq\u0000~\u0000At\u0000\u000eformComponentsq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u00004ppsq\u0000~\u0000"
+"6q\u0000~\u00009pq\u0000~\u0000Nsq\u0000~\u0000At\u0000\u0006isRootq\u0000~\u0000!q\u0000~\u0000Gsq\u0000~\u00004ppsq\u0000~\u00006q\u0000~\u00009psq\u0000"
+"~\u0000\u0013ppsr\u0000%com.sun.msv.datatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000&q\u0000~\u0000)t\u0000\ranySimpleTypeq\u0000~\u0000$q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000\u00a9q\u0000~\u0000)sq\u0000~\u0000At\u0000\u0003u"
+"seq\u0000~\u0000!q\u0000~\u0000Gsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar"
+"/ExpressionPool;xp\u0000\u0000\u0000$\u0001pq\u0000~\u0000zq\u0000~\u0000\u0095q\u0000~\u0000\u0007q\u0000~\u0000Mq\u0000~\u0000xq\u0000~\u0000\u0093q\u0000~\u0000\fq"
+"\u0000~\u0000qq\u0000~\u0000\u008eq\u0000~\u0000oq\u0000~\u0000\u008cq\u0000~\u0000\bq\u0000~\u0000\u00a4q\u0000~\u0000|q\u0000~\u0000\u0097q\u0000~\u0000\nq\u0000~\u0000dq\u0000~\u0000Xq\u0000~\u0000\tq"
+"\u0000~\u0000\u0005q\u0000~\u00005q\u0000~\u0000Sq\u0000~\u0000\u0012q\u0000~\u0000_q\u0000~\u0000kq\u0000~\u0000tq\u0000~\u0000\u0088q\u0000~\u0000\u008fq\u0000~\u0000\u009cq\u0000~\u0000\u00a0q\u0000~\u0000\u0006q"
+"\u0000~\u0000\u007fq\u0000~\u0000\u0098q\u0000~\u0000Kq\u0000~\u0000\u000bq\u0000~\u0000\rx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends captor.domainsystem.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(captor.domainsystem.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------");
        }

        protected Unmarshaller(captor.domainsystem.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return captor.domainsystem.impl.FormTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        if (("variant" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "isRoot");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  22 :
                        if (("nextForm" == ___local)&&("" == ___uri)) {
                            _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromEnterElement((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromEnterElement((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        if (("extends" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  24 :
                        if (("help" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  21 :
                        if (("nextForms" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  9 :
                        if (("enabled" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  27 :
                        if (("formComponents" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  28 :
                        if (("formComponent" == ___local)&&("" == ___uri)) {
                            _FormComponents = ((captor.domainsystem.impl.FormComponentsTypeImpl) spawnChildFromEnterElement((captor.domainsystem.impl.FormComponentsTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsRoot = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsRoot = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Use = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "isRoot");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("enabled" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  22 :
                        _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromLeaveElement((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  17 :
                        if (("variant" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  26 :
                        if (("help" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  8 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  30 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  23 :
                        if (("nextForms" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("formComponents" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  20 :
                        if (("extends" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("isRoot" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  22 :
                        _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromEnterAttribute((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("use" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  30 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "isRoot");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  22 :
                        _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromLeaveAttribute((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  5 :
                        if (("use" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  30 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  2 :
                        if (("isRoot" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "isRoot");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  22 :
                            _NextForms = ((captor.domainsystem.impl.NextFormsTypeImpl) spawnChildFromText((captor.domainsystem.impl.NextFormsTypeImpl.class), 23, value));
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "use");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  30 :
                            revertToParentFromText(value);
                            return ;
                        case  25 :
                            eatText3(value);
                            state = 26;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            eatText4(value);
                            state = 17;
                            return ;
                        case  13 :
                            eatText5(value);
                            state = 14;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  10 :
                            eatText6(value);
                            state = 11;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  19 :
                            eatText7(value);
                            state = 20;
                            return ;
                        case  7 :
                            eatText8(value);
                            state = 8;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Help = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Variant = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Enabled = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Enabled = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Extends = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
