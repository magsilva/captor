package captor.modelsystem.config;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Observable;
import java.util.Properties;

import captor.lib.util.StringUtil;
import captor.modelsystem.Model;


/**
 * 
 * Class that stores config info to the main window.
 * 
 * @author Kicho
 * 
 */
public class GUIConfig extends Observable {
    
    //Properties
    private String lookAndFeel;
    
    //Internal use
    private Properties applicationProps;
    private Model model;
    
    public GUIConfig(Model model)  {
        this.model = model;
    }

    /**
     * @return Returns the lookAndFellString.
     */
    public String getLookAndFeel() {
        return lookAndFeel;
    }
    /**
     * @param lookAndFellString The lookAndFellString to set.
     */
    public void setLookAndFeel(String lookAndFellString) {
        this.lookAndFeel = lookAndFellString;
    }
    
//--------------------------------------------------------------------
    
    public void load(boolean production) {

        if ( production )  {
            String path = model.getConfig().getSystemConfig().getFitPropertiesDefaultPath();
            
            Properties defaultProps;
            try  {
                defaultProps = new Properties();
                FileInputStream in = new FileInputStream(path);
                defaultProps.load(in);
                in.close();        
                
                applicationProps = new Properties(defaultProps);
                
                path = model.getConfig().getSystemConfig().getFitPropertiesPath();

                File file = new File(path);
                //o arquivo não existe. pod deixar usando o defalut.
                if ( !file.exists() )  {
                    lookAndFeel = applicationProps.getProperty("gui.lookAndFeel");
                    return;
                }

                in = new FileInputStream(path);
                applicationProps.load(in);
                in.close();
            }
            catch(Exception e)  {
                model.getGui().getGuiView().setErrorView("Captor Exception: Cannot open properties files.<br>Check if the files installPath/config/properties.files exist.<br><br>" + StringUtil.formatOutput(e.toString()));
                return;
            }
            lookAndFeel = applicationProps.getProperty("gui.lookAndFeel");
        }
        else  {
            lookAndFeel = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";
        }
    }
    
    public void save()  {
        String path = model.getConfig().getSystemConfig().getFitPropertiesPath();
        
        if ( applicationProps != null )  {
	        try  {
	            File file = new File(path);
	            if ( !file.exists() )  {
	                if ( !file.createNewFile() )  {
	                    throw new RuntimeException("Cannot create file: " + path);
	                }
	            }
	            
	            FileOutputStream out = new FileOutputStream(path);
	            applicationProps.put("gui.lookAndFeel", lookAndFeel);
	            applicationProps.store(out, "---DO NOT EDIT THIS FILE---");
	            out.close();        
	        }
	        catch(Exception e)  {
	            model.getGui().getGuiView().setErrorView("Captor Exception: Cannot save properties files.<br>Check if the files installPath/config/properties.files exist.<br><br>" + StringUtil.formatOutput(e.toString()));
	            return;
	        }
        }
    }
    
}
