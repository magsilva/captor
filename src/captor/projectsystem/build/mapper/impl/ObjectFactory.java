//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.5-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.09.30 at 03:11:36 PM BRT 
//


package captor.projectsystem.build.mapper.impl;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import captor.projectsystem.build.mapper.CallTaskType;
import captor.projectsystem.build.mapper.ComposeType;
import captor.projectsystem.build.mapper.ComposerType;
import captor.projectsystem.build.mapper.ForEachType;
import captor.projectsystem.build.mapper.IfType;
import captor.projectsystem.build.mapper.MainType;
import captor.projectsystem.build.mapper.TaskType;
import captor.projectsystem.build.mapper.TasksType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the captor.projectsystem.build.mapper.impl package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Composer_QNAME = new QName("", "composer");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: captor.projectsystem.build.mapper.impl
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CallTaskType }
     * 
     */
    public CallTaskTypeImpl createCallTaskType() {
        return new CallTaskTypeImpl();
    }

    /**
     * Create an instance of {@link IfType }
     * 
     */
    public IfTypeImpl createIfType() {
        return new IfTypeImpl();
    }

    /**
     * Create an instance of {@link TaskType }
     * 
     */
    public TaskTypeImpl createTaskType() {
        return new TaskTypeImpl();
    }

    /**
     * Create an instance of {@link ComposeType }
     * 
     */
    public ComposeTypeImpl createComposeType() {
        return new ComposeTypeImpl();
    }

    /**
     * Create an instance of {@link TasksType }
     * 
     */
    public TasksTypeImpl createTasksType() {
        return new TasksTypeImpl();
    }

    /**
     * Create an instance of {@link ComposerType }
     * 
     */
    public ComposerTypeImpl createComposerType() {
        return new ComposerTypeImpl();
    }

    /**
     * Create an instance of {@link MainType }
     * 
     */
    public MainTypeImpl createMainType() {
        return new MainTypeImpl();
    }

    /**
     * Create an instance of {@link ForEachType }
     * 
     */
    public ForEachTypeImpl createForEachType() {
        return new ForEachTypeImpl();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComposerTypeImpl }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "composer")
    public JAXBElement<ComposerTypeImpl> createComposer(ComposerTypeImpl value) {
        return new JAXBElement<ComposerTypeImpl>(_Composer_QNAME, ComposerTypeImpl.class, null, value);
    }

}
